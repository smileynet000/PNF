funcdef 0V a(0V);
funcdef 0V b(var a: number);
funcdef 0V c(var b: string, var c: number);
funcdef 0V d(var d: string, var e: number, var f: number);
funcdef 0V e(0V);
funcdef 0V f(0V);
funcdef 0V g(var g: string);
funcdef 0V h(0V);
funcdef 0V i(var h: boolean);
funcdef 0V j(0V);
funcdef var: number k(0V);
funcdef var: boolean l(0V);


function 0V a(0V)
{
 println "a()";
 fret;
};

function 0V b(var a: number)
{
 println "b()";
 load aload 77;
 fparameter 0V b(var a: number) a number number;
 print '"';
 fparameter 0V b(var a: number) a number;
 print;
 println '"';
 fret;
};

function 0V c(var b: string, var c: number)
{
 println "c()";
 fret;
};

function 0V d(var d: string, var e: number, var f: number)
{
 println "d()";
 fret;
};

function 0V e(0V)
{
 println "e()";
 fret;
};

function 0V f(0V)
{
 println "f()";
 fret;
};

function 0V g(var g: string)
{
 println "g()";
 fret;
};

function 0V h(0V)
{
 println "h()";
 funccall 0V a(0V: a);
 fret;
};

function 0V i(var h: boolean)
{
 println "i()";
 fparameter 0V i(var h: boolean) h boolean;
 println;
 fret;
};

function 0V j(0V)
{
 println "j()";
 funccall 0V h(0V: k);
 fret;
};

function var: number k(0V)
{
 println "k()";
 load function var: number k(0V) rvalue 0 : 76;
 fret;
};

function var: boolean l(0V)
{
 println "l()";
 load function var: boolean l(0V) rvalue 0 : true;
 fret;
};


funccall 0V a(0V: a);
funccall 0V b(22: b);
funccall 0V c("true": c, 77: d);
funccall 0V d("hello": e, 76: f, 79: g);
funccall 0V e(0V: h);
funccall 0V f(0V: i);
funccall 0V g("not a toy.": j);
funccall 0V h(0V: k);
funccall 0V i(true: l);
funccall 0V j(0V: m);

println "";
funccall var: number k(0V: a);
load rvalue 0;
print "The value returned was: ";
println;

println "";
funccall var: boolean l(0V: a);
load rvalue 0;
print "The value returned was: ";
println;

end 0;